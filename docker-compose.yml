version: "3.8"

services:
  spark-master:
    build: ./docker/spark/master
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_LOCAL_IP=spark-master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - 7078:7077
      - 8081:8080
    volumes:
      - ./docker/spark/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf

  spark-worker-1:
    image: bitnami/spark:3.3.3
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=4G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no

  spark-worker-2:
    image: bitnami/spark:3.3.3
    container_name: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=4G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no

  spark-worker-3:
    image: bitnami/spark:3.3.3
    container_name: spark-worker-3
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=4G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no

  spark-notebook:
    build: ./docker/spark/notebook
    container_name: spark-notebook
    environment:
      - JUPYTER_ENABLE_LAB="yes"
      - GRANT_SUDO="yes"
    ports:
      - 8880:8888
      - 4040:4040
    command: jupyter lab --NotebookApp.token='' --allow-root
    volumes:
      - ./src:/home/jovyan
      - ./docker/spark/spark-defaults.conf:/usr/local/spark/conf/spark-defaults.conf

  minio:
    image: minio/minio:RELEASE.2023-09-07T02-05-02Z
    container_name: minio
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    ports:
      - 9001:9000
      - 9002:9001
    command: ["server", "/data", "--console-address", ":9001"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3

  minio-client:
    image: minio/mc:RELEASE.2023-09-07T22-48-55Z
    container_name: minio-client
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: ["/bin/bash", "-c"]
    command:
      - |
        /usr/bin/mc config host add minio http://minio:9000 minio minio123 &&
        /usr/bin/mc mb --ignore-existing minio/data

  data-generator:
    build: ./docker/data-generator
    container_name: data-generator
    depends_on:
      minio:
        condition: service_healthy
    command: python data_generator.py
    volumes:
      - ./data:/data

networks:
  default:
    name: simple-data-flow
